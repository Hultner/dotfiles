set -g update-environment "DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"
set-environment -g 'SSH_AUTH_SOCK' ~/.ssh/ssh_auth_sock

set -g default-terminal "xterm-256color"


# Cycle panes with ^B v and ^B V 
bind -r v select-pane -t :.+
bind -r V select-pane -t :.-

# Send prefix to server with ^B ^B
unbind ^B
bind ^B send-prefix 

# Send to inner tmux
bind-key -n C-q send-prefix

# Move between windows with ^B n and ^B N
bind -r n select-window -t :+
bind -r N select-window -t :-

# Reload config with a key
bind-key r source-file ~/.tmux.conf \; display "Config reloaded!"


set -g mouse on

# Scrolling works as expected
set-option -ga terminal-overrides ",xterm-256color:Tc"
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# TMUX Vim cursor fix https://github.com/neovim/neovim/pull/3165 
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
set -g focus-events on

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# C-l is taken over by vim style pane navigation
bind C-l send-keys 'C-l'

# Use vim keybindings in copy mode
setw -g mode-keys vi
#bind-key -t vi-copy y copy-pipe "pbcopy"
#bind-key -Tcopy-mode-vi y send -x copy-pipe "pbcopy"
#bind-key -t vi-copy 'v' begin-selection
#bind -Tcopy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
# bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi 'r' send-keys -X rectangle-toggle

#bind-key p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"

# URI
#bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'

set -g default-shell $SHELL 
# set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Powerline tmux
set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 60
# TODO: Check
# set-option -g status-left "#(/Users/hultner/dev/termStuff/dotfiles/HultnerRMBP/tmux-powerline/powerline.sh left)"
# set-option -g status-right "#(/Users/hultner/dev/termStuff/dotfiles/HultnerRMBP/tmux-powerline/powerline.sh right)"
#set-window-option -g window-status-current-format "#[fg=colour2, bg=colour15][#I:#W]"
# TODO: Check
# bind C-[ run '/Users/hultner/dev/termStuff/dotfiles/HultnerRMBP/tmux-powerline/mute_powerline.sh left'      # Mute left statusbar.
# bind C-] run '/Users/hultner/dev/termStuff/dotfiles/HultnerRMBP/tmux-powerline/mute_powerline.sh right'     # Mute right statusbar.
# set-window-option -g window-status-format "#[fg=colour18, bg=colour8]#[fg=colour7, bg=colour8] #I #W #[fg=colour8, bg=colour18]"
set-window-option -g window-status-format "#I.#W"
set-window-option -g window-status-current-format "#[fg=colour18, bg=colour6,bright] #I  #W #[fg=colour6, bg=colour18]"
# set-window-option -g window-status-current-format " #I #[fg=colour0, bg=colour10] #W #[fg=colour10, bg=colour0]"
set -g status-style bg=colour18,fg=default


# default window title colors
set-window-option -g window-status-style fg=colour7,bg=colour18

# active window title colors
set-window-option -g window-status-current-style fg=colour18,bg=colour6

# pane border
set-option -g pane-border-style fg=colour20
set-option -g pane-active-border-style fg=colour2


# Tmux Plugin Manager

# Installs tpm if it's not already installed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# # set -g @plugin 'github_username/plugin_name'
# # set -g @plugin 'git@github.com/user/plugin'
# # set -g @plugin 'git@bitbucket.com/user/plugin'
#
# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @plugin 'tmux-plugins/tmux-sidebar'
#set -g @sidebar-tree-command 'tree -C' # Colorful output
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'jbnicolai/tmux-fpp'

# Default colorful tree command
# set -g @sidebar-tree-command 'tree -C' # Colorful output
# Instructs the sidebar to not list files from a python virtual env if active
set -g @sidebar-tree-command 'tree -C -I $(basename $(echo ${VIRTUAL_ENV:-"___NO-VIRTUAL_ENV-ACTIVATED-$(uuidgen)__"}))'

set-window-option -g automatic-rename off
set-option -g allow-rename off

set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-processes 'ssh mosh-client mopidy ncmpcpp bpython bpython2 gunicorn python python2 python3 mosh'
    
# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'

# # True color tmux
# set -g default-terminal "screen-256color"
# set -ga terminal-overrides ",xterm-256color:Tc"
